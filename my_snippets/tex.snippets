extends math

global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and x != '0'
endglobal


snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet mt "" wA
$$1$$0
endsnippet

snippet mmt "" WA
$$$1$$$0
endsnippet

context "math()"
snippet fa "" iA
($1)/($2)$3
endsnippet

context "math()"
snippet fj "" iA
($1)$2
endsnippet

context "math()"
snippet fk "" iA
[$1]$2
endsnippet

context "math()"
snippet fl "" iA
{$1}$2
endsnippet

context "math()"
snippet fh "" iA
|$1|$2
endsnippet

context "math()"
snippet int "" iA
int_($1)^($2)$3
endsnippet

context "math()"
snippet sum "" iA
int_($1)^($2)$3
endsnippet

context "math()"
snippet prod "" iA
prod_($1)^($2)$3
endsnippet

context "math()"
snippet intersectall "" iA
intersect_($1)^($2)$3
endsnippet

context "math()"
snippet unionall "" iA
union_($1)^($2)$3
endsnippet

context "math()"
snippet sr "" iA
^2
endsnippet

context "math()"
snippet cb "" iA
^3
endsnippet

context "math()"
snippet inv "" iA
^(-1)
endsnippet

context "math()"
snippet td "" iA
^($1)$0
endsnippet



